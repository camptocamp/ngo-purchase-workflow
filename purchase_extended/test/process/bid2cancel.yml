-
  Cancel a new RFQ.
-
  Create RFQ
-
  !record {model: purchase.order, id: purchase_order_ext_bid2cancel1}:
    partner_id: base.res_partner_1
    invoice_method: order
    date_order: '2013-08-02'
    bid_validity: '2013-08-15'
    order_line:
      - product_id: product.product_product_15
        product_qty: 15.0
        date_planned: '2013-08-30'
      - product_id: product.product_product_25
        product_qty: 5.0
      - product_id: product.product_product_27
        product_qty: 4.0
-
  I print the RFQ.
-
  !python {model: purchase.order}: |
    self.print_quotation(cr, uid, [ref("purchase_order_ext_bid2cancel1")])
-
  I run the 'Cancel' wizard. I fill the reason.
-
  !record {model: purchase.action_modal_cancelreason, id: purchase_order_ext_bid2cancel1_cancelreason}:
    reason_id: purchase_cancelreason_rfq_canceled
-
  I run the 'Cancel' wizard. I confirm the wizard.
-
  !python {model: purchase.order}: |
    self.purchase_cancel_ok(cr, uid, [ref("purchase_order_ext_bid2cancel1")],{'active_id':ref("purchase_order_ext_bid2cancel1_cancelreason")})
-
  I check the "Canceled" status.
-
  !assert {model: purchase.order, id: purchase_order_ext_bid2cancel1}:
    - type == 'rfq'
    - state == 'cancel'
    - cancel_reason_id.id == ref("purchase_cancelreason_rfq_canceled")
-
-
  Cancel a new Bid.
-
  Create a Bid
-
  !record {model: purchase.order, id: purchase_order_ext_bid2cancel2, context: '{"draft_bid": 1}'}:
    partner_id: base.res_partner_1
    invoice_method: order
    date_order: '2013-08-02'
    bid_validity: '2013-08-15'
    order_line:
      - product_id: product.product_product_15
        product_qty: 15.0
        date_planned: '2013-08-30'
        price_unit: 43.35
      - product_id: product.product_product_25
        product_qty: 5.0
        price_unit: 43.35
      - product_id: product.product_product_27
        product_qty: 4.0
        price_unit: 43.35
-
  I run the 'Cancel' wizard. I fill the reason.
-
  !record {model: purchase.action_modal_cancelreason, id: purchase_order_ext_bid2cancel1_cancelreason}:
    reason_id: purchase_cancelreason_rfq_canceled
-
  I run the 'Cancel' wizard. I confirm the wizard.
-
  !python {model: purchase.order}: |
    self.purchase_cancel_ok(cr, uid, [ref("purchase_order_ext_bid2cancel2")],{'active_id':ref("purchase_order_ext_bid2cancel1_cancelreason")})
-
  I check the "Canceled" status.
-
  !assert {model: purchase.order, id: purchase_order_ext_bid2cancel2}:
    - type == 'rfq'
    - state == 'cancel'
    - cancel_reason_id.id == ref("purchase_cancelreason_rfq_canceled")
